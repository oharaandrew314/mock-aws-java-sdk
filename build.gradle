plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.31'
    id 'jacoco'
    id 'maven-publish'
    id 'antlr'
}

sourceCompatibility = 8
targetCompatibility = 8

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    antlr "org.antlr:antlr4:4.9.3"
    implementation "org.antlr:antlr4-runtime:4.9.3"

    compileOnly platform("com.amazonaws:aws-java-sdk-bom:1.11.309+")
    compileOnly group: 'com.amazonaws', name: 'aws-java-sdk-s3'
    compileOnly group: 'com.amazonaws', name: 'aws-java-sdk-sqs'
    compileOnly group: 'com.amazonaws', name: 'aws-java-sdk-dynamodb'
    compileOnly group: 'com.amazonaws', name: 'aws-java-sdk-ssm'
    compileOnly group: 'com.amazonaws', name: 'aws-java-sdk-secretsmanager'
    compileOnly group: 'com.amazonaws', name: 'aws-java-sdk-sns'
    compileOnly group: 'com.amazonaws', name: 'aws-java-sdk-cloudformation'

//    compileOnly fileTree(dir: 'lib', include: '*.jar')

    compileOnly platform("software.amazon.awssdk:bom:2.17.34+")
    compileOnly "software.amazon.awssdk:s3"
    compileOnly "software.amazon.awssdk:sns"
    compileOnly "software.amazon.awssdk:cloudformation"
    compileOnly "software.amazon.awssdk:sqs"
    compileOnly "software.amazon.awssdk:secretsmanager"
    compileOnly "software.amazon.awssdk:ssm"
    compileOnly "software.amazon.awssdk:dynamodb"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.assertj:assertj-core:3.20.2'
    testImplementation 'io.kotest:kotest-runner-junit5:4.6.2'
    testImplementation "software.amazon.awssdk:dynamodb-enhanced"
}

configurations { // don't want to bundle SDKs in library, but they are needed in tests
    testImplementation.extendsFrom compileOnly
}

generateGrammarSource {
    maxHeapSize = "128m"
    arguments += ['-package', 'io.andrewohara.awsmock.dynamodb.backend.grammar', '-visitor', '-no-listener']
}

sourceSets {
    generated {
        kotlin.srcDir 'generated-src/antlr/main/'
    }
}
compileKotlin.source sourceSets.generated.kotlin, sourceSets.main.kotlin

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

jacocoTestReport {
    reports {
        xml.enabled true
        xml.destination file("${buildDir}/reports/jacoco/report.xml")
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.kotlin
            artifact sourcesJar
        }
    }
}

test {
    useJUnitPlatform()
}